// Protocol for sending and receiving ads

syntax = "proto3";
package google.protobuf;
option objc_class_prefix = "CSNP";
option java_package = "com.commutestream.sdk.protobuf";

message TransitAgency {
  string agency_id = 1;
}

message TransitRoute {
  string agency_id = 1;
  string route_id = 2;
}

message TransitStop {
  string agency_id = 1;
  string route_id = 2;
  string stop_id = 3;
}

message Location {
  double lat = 2;
  double lon = 3;
}

message LocationComponent {
  uint64 component_id = 1;
  Location location = 2;
  string name = 3;
  string address = 4;
}


enum HeroKind {
  Image = 0;
  HTML = 1;
}

message HeroComponent {
  uint64 component_id = 1;
  HeroKind kind = 2;
  bytes blob = 3;
}

enum ActionKind {
  Url = 0; 
}

message ActionComponent {
  uint64 component_id = 1;
  ActionKind kind = 2;
  string url = 3;
  string title = 4;
  Colors colors = 5;
}


message TransitTitleComponent {
  uint64 component_id = 1;
  string title = 2;
}

message TransitSubtitleComponent {
  uint64 component_id = 1;
  string subtitle = 2;
}

message LogoComponent {
  uint64 component_id = 1;
  bytes image = 2;
}

message HeadlineComponent {
  uint64 component_id = 1;
  string headline = 2;
}

message BodyComponent {
  uint64 component_id = 1;
  string body = 2;
}

message AdvertiserComponent {
  uint64 component_id = 1;
  string advertiser = 2;
}

message Color {
 uint32 red = 1;
 uint32 green = 2;
 uint32 blue = 3;
}

message Colors {
  Color background = 1;
  Color foreground = 2;
}

message SecondaryActionComponent {
  uint64 component_id = 1;
}

message ViewComponent {
  uint64 component_id = 1;
}

message NativeAd {
  uint64 request_id = 1;
  uint64 ad_id = 2;
  Colors colors = 3;
  repeated ActionComponent actions = 4;
  ViewComponent view = 5;
  SecondaryActionComponent secondary_action_screen = 7;
  TransitTitleComponent transit_title = 8;
  TransitSubtitleComponent transit_subtitle = 9;
  LogoComponent logo = 10;
  HeadlineComponent headline = 11;
  BodyComponent body = 12;
  AdvertiserComponent advertiser = 13;
  LocationComponent location = 14;
  HeroComponent hero = 15;
}

// AdRequest contains a hash_id which is the hash everything but the num_of_ads 
message AdRequest {
  bytes hash_id = 1;
  uint32 num_of_ads = 2;
  repeated Location locations = 3;
  repeated TransitAgency agencies = 4;
  repeated TransitRoute routes = 5;
  repeated TransitStop stops = 6;
}

// AdRequests contains relevant information needed to attempt filling ad requests
message AdRequests {
  bytes ad_unit = 1;
  DeviceID device_id = 2;
  repeated bytes ip_addresses = 3;
  string timezone = 4;
  repeated AdRequest ad_requests = 5;
}

// AdResponse is a mapping between an AdRequest hash_id and the set of ads
message AdResponse {
  bytes hash_id = 1;
  repeated NativeAd ads = 2;
}

// AdResponses returns a mapping of ad context hashes to a set of ads.
message AdResponses {
  string server_id = 1;
  repeated AdResponse ad_responses = 2;
}

message DeviceID  {
  enum Type {
    IDFA = 0;
    AAID = 1;
  }
  Type device_id_type = 1;
  bytes device_id = 2;
}

enum ComponentInteractionKind {
  Tap = 0;
}

message ComponentInteraction {
  uint64 device_time = 1;
  ComponentInteractionKind kind = 2;
}

message ComponentReport {
  uint64 component_id = 1;
  uint64 visibility_epoch = 2;
  uint64 visibility_sample_count = 3;
  repeated uint64 view_visibility_samples = 4;
  repeated uint64 device_visibility_samples = 5;
  repeated ComponentInteraction interactions = 6;
}

message AdReport {
  uint64 request_id = 1;
  uint64 ad_id = 2;
  repeated ComponentReport components = 3;
}
  
message AdReports {
  bytes ad_unit = 1;
  DeviceID device_id = 2;
  string timezone = 3;
  repeated bytes ip_addresses = 4;
  uint64 device_time = 5;
  repeated AdReport ad_reports = 6;
}
